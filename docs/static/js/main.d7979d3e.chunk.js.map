{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifsData","map","item","gif","images","downsized_medium","title","id","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","gifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAuCeA,EApCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OAEE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,YAAY,mBACZC,MAAOV,EACPW,SArBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,8DAGEI,MAAMF,GAHR,cAGfG,EAHe,gBAIEA,EAASC,OAJX,uBAIbC,EAJa,EAIbA,KACFC,EAAWD,EAAKE,KAAI,SAACC,GACzB,MAAO,CACLC,IAAKD,EAAKE,OAAOC,iBAAiBX,IAClCY,MAAOJ,EAAKI,MACZC,GAAIL,EAAKK,OAIbC,QAAQC,IAAIT,GAbS,kBAcdA,GAdc,4CAAH,sDCWLU,EAVK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOH,EAAU,EAAVA,IAC5B,OAEE,sBAAKQ,UAAU,6CAAf,UACE,qBAAKC,IAAKT,EAAKU,IAAI,eACnB,4BAAIP,QCkBKQ,EArBC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EAEdf,mBAAS,CACjCsB,KAAM,GACNgB,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACR3B,EAAQC,GAAU2B,MAAK,SAAAtB,GACrBuB,YAAW,WACTH,EAAS,CACPlB,KAAMF,EACNkB,SAAS,MAEV,UAEJ,CAACvB,IAEGwB,EDfyBK,CAAa7B,GAA/B8B,EAFkB,EAExBvB,KAAYgB,EAFY,EAEZA,QAEpB,OACE,sBAAKJ,UAAU,WAAf,UACE,6BAAKnB,IAEJuB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SAEIW,EAAKrB,KAAI,SAACE,GAAD,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAII,aESnBgB,EAtBM,WAAO,IAAD,EAEW9C,mBAAS,CAAC,gBAFrB,mBAElB+C,EAFkB,KAENhD,EAFM,KAIzB,OACE,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEIgD,EAAWvB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCb1BiC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.d7979d3e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cat) => [inputValue, ...cat]);\r\n      setInputValue('');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='Enter a Category'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=9&api_key=XbJfOO44RGJ8sxpEN5cTX7GxwBnfjBN7`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifsData = data.map((item) => {\r\n    return {\r\n      gif: item.images.downsized_medium.url,\r\n      title: item.title,\r\n      id: item.id\r\n    };\r\n  });\r\n\r\n  console.log(gifsData);\r\n  return gifsData;\r\n\r\n};","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, gif }) => {\r\n  return (\r\n\r\n    <div className='card animate__animated animate__backInDown'>\r\n      <img src={gif} alt=\"gif-cheese\" />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data: gifs, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className='grid-box'>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <h4>Loading...</h4>}\r\n\r\n      <div className='card-grid'>\r\n        {\r\n          gifs.map((gif) => (\r\n            <GifGridItem key={gif.id} {...gif} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(response => {\r\n      setTimeout(() => {\r\n        setstate({\r\n          data: response,\r\n          loading: false\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n};","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid key={category} category={category} />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}